[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "saytoai-shared"
version = "0.0.1"
description = "Shared models, constants, and utilities for the SayToAI ecosystem"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SayToAI Team", email = "saytoaiapp@gmail.com"}
]
maintainers = [
    {name = "SayToAI Team", email = "saytoaiapp@gmail.com"}
]
keywords = ["saytoai", "ai", "bot", "shared", "models", "pydantic"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTPS :: Dynamic Content",
    "Topic :: Communications :: Chat"
]
requires-python = ">=3.12"
dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "typing-extensions>=4.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0"
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0"
]
testing = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0"
]

[project.urls]
Homepage = "https://www.saytoai.org"
Repository = "https://github.com/saytoai-org/saytoai-shared"
Documentation = "https://docs.saytoai.org/shared"
"Bug Tracker" = "https://github.com/saytoai-org/saytoai-shared/issues"
Changelog = "https://github.com/saytoai-org/saytoai-shared/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
include = ["saytoai_shared*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
saytoai_shared = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tests.*"
]
disallow_untyped_defs = false

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["saytoai_shared"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov" 